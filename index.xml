<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://anila.me/</link>
    <description>Recent content on My New Hugo Site</description>
    <image>
      <url>https://anila.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://anila.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Sun, 26 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://anila.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Google Tag Manager 如何埋設代碼？ </title>
      <link>https://anila.me/posts/gtm-ii/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/gtm-ii/</guid>
      <description>&lt;h2 id=&#34;一前言&#34;&gt;一、前言&lt;/h2&gt;
&lt;p&gt;上篇我們介紹了如何講 GTM 的數據連接至 GA，這次讓我們來實作代碼的設定，來追蹤我們網站上想要追蹤的事件吧。在開始新增網頁上的 GTM 追蹤代碼之前，我們先來了解構成 GTM 追蹤代碼的三大元件：代碼、觸發條件、變數。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title> Google Tag Manager with Google Analytics</title>
      <link>https://anila.me/posts/gtm-i/</link>
      <pubDate>Sat, 25 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/gtm-i/</guid>
      <description>&lt;h2 id=&#34;一認識-gtm&#34;&gt;一、認識 GTM&lt;/h2&gt;
&lt;p&gt;GTM 是一套代碼管理的平台，主要是用來追蹤網站上各個元素所發生的事件，並管所有追蹤的程式碼之平台，簡單來說，透過 GTM，我們更可以更容易的追蹤網站上的特定內容並設定追蹤的程式碼，或是置入第三方應用工具來輔助分析網站，並幫助我們能妥善管理所有在網站上設置的程式碼，再透過分析工具如 Google Analytics，使我們能夠更了解網站上的使用者行為，進而改善與優化網站上的內容，對使用者進行再行銷。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pandas - Series 與 DataFrame 建立 </title>
      <link>https://anila.me/posts/python_pandas-i/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/python_pandas-i/</guid>
      <description>前言 在 Python 套件生態系中，Numpy、Pandas、Matplotlib、Scipy 以及 scikit-learn 是常用來進行資料分析、資料科學和機器學習應用的重要套件和模組。
實際上，Pandas 不算是資料科學的工具，而是資料科學分析工具前階段的工具。 本篇文章主要會針對 Pandas 中，重要的資料結構 Series 和 DataFrame 的基礎使用進行介紹。
一、Pandas 的認識 Pandas 是將資料預處理及分析資料非常好用的函式庫。它結合了Numpy 的特性，並擁有 Excel 和 SQL 的資料操作能力，使我們藉由 DataFrame 的形式，對各式各樣的資料進行各種有彈性的加工。
Pandas 的主要的特色如下：
 提供兩種主要的資料結構：Series、DataFrame。Series 主要用於建立索引的一維陣列，用來處理時間序列相關的資料；而 DataFrame 則是有列索引和欄標籤的二維資料集，類似於 Excel 的資料表或是 SQL 的關聯式資料庫。 透過 Pandas 的資料結構及結構化物件的方法，將資料進行更多元的處理。像是將資料進行空值的填補、刪除或取代。 在異質資料的讀取、轉換和處理上更容易。像是從資料當中找出符合某個條件的欄或列，或是對資料進行分隔、結合等操作等。 更多樣的輸入來源及整合性的輸出方式。像是可以從 CSV 或資料庫讀取資料轉成 DataFrame ，也可以將處理完的資料轉成CSV 或資料庫。  透過 Pandas 的套件，使我們可以跨越 Excel 的限制，也使資料分析的工作更方便輕鬆，而且能夠更快速地發現資料中的資訊與其中的意義。
安裝 pip3 install pandas 匯入 import pandas as pd 二、Series (序列) 建立 Series 是類似於一維陣列的物件。我可以使用 Python 的 list 資料型別或是 dictionary 資料型別來建立 Series：</description>
    </item>
    
    <item>
      <title>Pandas - 好用的資料選擇方法 </title>
      <link>https://anila.me/posts/python_pandas-ii/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/python_pandas-ii/</guid>
      <description>前言 本篇會針對 Pandas 中 DataFrame 的取值方法進行介紹，主要分為三個部分：
 基本的資料選擇 DataFrame.loc 的方法 DataFrame.iloc 的方法  在下文介紹的 .loc 及 .iloc 方法中，資料選擇的規則是「先列再行，並以逗號間隔列與行的資料」 ex [列, 行]，因此在取資料的時候要特別注意。那話不多說就實際來看看這些方法要如何操作~~!
一、基本的資料選擇 在 DataFrame 的資料結構中，我們可以透過直接透過 index 和 column 來找到某一筆符合條件的資料。那我們以 df_student_index 為例來實際操作看看如何篩選和取出資料吧。
dict_student = {&amp;#39;ID&amp;#39;:[1100101, 1100102, 1100103, 1100104, 1100105], &amp;#39;Sex&amp;#39;:[&amp;#39;f&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;m&amp;#39;], &amp;#39;Chinese&amp;#39;:[60, 70, 77, 69, 70], &amp;#39;Math&amp;#39;:[66, 75, 74, 88, 94],&amp;#39;English&amp;#39;:[70, 88, 67, 89, 97]} df_student_index = pd.DataFrame(dict_student,index=[&amp;#39;a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;,&amp;#39;d&amp;#39;,&amp;#39;e&amp;#39;]) print(df_student_index) # print(df_student_index)  ID Sex Chinese Math English a 1100101 f 60 66 70 b 1100102 m 70 75 88 c 1100103 f 77 74 67 d 1100104 f 69 88 89 e 1100105 m 70 94 97 1.</description>
    </item>
    
    <item>
      <title>Numpy - Array 與 Matrix 運算</title>
      <link>https://anila.me/posts/python_numpy-ii/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/python_numpy-ii/</guid>
      <description>前言 在 Numpy 中，array 用於表示通用的 N 維陣列，matrix 則特定用於線性代數計算。二維的 array 和 matrix 都可以用來表示矩陣，但二者在進行乘法運算的時後，有一些不同的地方。 Array 的運算是針對每一個元素進行運算，Matrix 的運算則是對矩陣進行運算。
一、List 與 Numpy array 的常數乘法運算 我們可以看到 list 在進行常數乘法運算時，會將原本 list 重複串接 N 倍，若要針對每個元素個別運算需要使用 for 迴圈迭代，因為 list 具備異質資料型態的特性。而 ndarray 在常數的乘法運算時則會直接將各個元素乘上 N 倍數，這是 ndarray 同質資料型態的表現。
list_1 = [[1, 2], [3, 4]] x = np.array(list_1)  print(list_1*3) print(&amp;#39;\n&amp;#39;) print() print(&amp;#39;\n&amp;#39;) print(x*3) # 輸出： # print(list_1*3) [[1, 2], [3, 4], [1, 2], [3, 4], [1, 2], [3, 4]]  # print(x)  [[1 2]  [3 4]]  # print(x*3)  [[ 3 6]  [ 9 12]]</description>
    </item>
    
    <item>
      <title>NumPy - 基礎概念及簡易使用</title>
      <link>https://anila.me/posts/python_numpy-i/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/python_numpy-i/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在資料科學中，我們常常需要面對大量的資料來進行資料的加工、運算及分析，為了有效率的對資料進行各式各樣的處理，我們常常會匯入 Python 的套件來使用，以減少在資料處理過程中繁複的程式碼。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python - Function 重點觀念整理</title>
      <link>https://anila.me/posts/python_fun-i/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/python_fun-i/</guid>
      <description>&lt;h2 id=&#34;一函式的基本認識&#34;&gt;一、函式的基本認識&lt;/h2&gt;
&lt;p&gt;函式是程式中的&lt;strong&gt;子程式&lt;/strong&gt;或&lt;strong&gt;副程式&lt;/strong&gt;。概念有點類似於數學上的函數，它負責處理程式碼中的某項功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL - 使用資料庫的必備語法</title>
      <link>https://anila.me/posts/mysql_basic/</link>
      <pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/mysql_basic/</guid>
      <description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;SQL 為 Structured Query Language 縮寫，念 S.Q.L 或 sequel。 中文稱結構化查詢語言。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>喵 - 新手喵咪日誌</title>
      <link>https://anila.me/posts/cat_life-i/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/cat_life-i/</guid>
      <description>&lt;h3 id=&#34;我領養了一隻來自彰化的貓咪-mimi&#34;&gt;我領養了一隻來自彰化的貓咪 mimi！&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>實戰篇 - 如何用 Python 撰寫 PTT Web Crawler?</title>
      <link>https://anila.me/posts/ptt_job_crawler-ii/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/ptt_job_crawler-ii/</guid>
      <description>&lt;h3 id=&#34;了解網路爬蟲的概念後那我們就接著來實作看看吧&#34;&gt;了解網路爬蟲的概念後，那我們就接著來實作看看吧！&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>入門篇 - 如何用 Python 撰寫 PTT Web Crawler?</title>
      <link>https://anila.me/posts/ptt_job_crawler-i/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/ptt_job_crawler-i/</guid>
      <description>&lt;h3 id=&#34;什麼是網路爬蟲呢讓我們來一探究竟&#34;&gt;什麼是網路爬蟲呢？讓我們來一探究竟！&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>My journey in Seattle - Part I</title>
      <link>https://anila.me/posts/seattle-i/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anila.me/posts/seattle-i/</guid>
      <description>&lt;h1 id=&#34;20180803&#34;&gt;&lt;strong&gt;2018.08.03&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;The two-week study tour, I have been looking forward to it for two years！&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
